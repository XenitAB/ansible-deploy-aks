- name: Set fact for istioOperator tempdir
  set_fact:
    istioOperatorTempDir: "/tmp/istioOperator-{{ ansible_date_time.iso8601_basic_short }}"
  tags:
    - istioOperator

- name: Copy templates and apply
  block:
  - name: Create istioOperator temp dir
    file:
      path: "{{ istioOperatorTempDir }}"
      state: directory
      mode: 0755
    changed_when: false
    tags:
      - istioOperator

  - name: Clone istio-operator git repository
    git:
      repo: "{{ configuration.istioOperator.operatorGitRepo }}"
      dest: "{{ istioOperatorTempDir }}"
      version: "{{ configuration.istioOperator.operatorBranch }}"
    tags:
      - istioOperator
      
  - name: Deploy istio-operator using make
    make:
      chdir: "{{ istioOperatorTempDir }}"
      target: deploy
    environment:
      KUBECONFIG: "{{ configuration.k8sconfiguration.dest }}"
    tags:
      - istioOperator

  - name: Add istio using the operator
    k8s:
      kubeconfig: "{{ configuration.k8sconfiguration.dest }}"
      state: present
      namespace: "{{ configuration.istioOperator.namespace }}"
      definition:
        apiVersion: istio.banzaicloud.io/v1beta1
        kind: Istio
        metadata:
          labels:
            controller-tools.k8s.io: "1.0"
          name: istio
        spec:
          version: "{{ configuration.istioOperator.istioVersion }}"
          mtls: true
          includeIPRanges: "10.244.0.0/16,10.0.0.0/16"
          excludeIPRanges: ""
          autoInjectionNamespaces:
          - "default"
          controlPlaneSecurityEnabled: true
          sds:
            enabled: false
          pilot:
            enabled: true
            image: "docker.io/istio/pilot:{{ configuration.istioOperator.istioVersion }}"
            replicaCount: 1
            minReplicas: 1
            maxReplicas: 5
            traceSampling: 1.0
          citadel:
            enabled: true
            image: "docker.io/istio/citadel:{{ configuration.istioOperator.istioVersion }}"
          galley:
            enabled: true
            image: "docker.io/istio/galley:{{ configuration.istioOperator.istioVersion }}"
            replicaCount: 1
          gateways:
            enabled: true
            ingress:
              enabled: true
              replicaCount: 1
              minReplicas: 2
              maxReplicas: 5
              serviceType: "LoadBalancer"
              serviceAnnotations: {}
              serviceLabels: {}
            egress:
              enabled: false
              replicaCount: 1
              minReplicas: 1
              maxReplicas: 5
              serviceType: "ClusterIP"
              serviceAnnotations: {}
              serviceLabels: {}
            k8singress:
              enabled: false
          mixer:
            enabled: true
            image: "docker.io/istio/mixer:{{ configuration.istioOperator.istioVersion }}"
            replicaCount: 1
            minReplicas: 1
            maxReplicas: 5
          sidecarInjector:
            enabled: true
            image: "docker.io/istio/sidecar_injector:{{ configuration.istioOperator.istioVersion }}"
            replicaCount: 1
            rewriteAppHTTPProbe: true
            autoInjectionPolicyEnabled: true
          nodeAgent:
            enabled: false
            image: "docker.io/istio/node-agent-k8s:{{ configuration.istioOperator.istioVersion }}"
          proxy:
            image: "docker.io/istio/proxyv2:{{ configuration.istioOperator.istioVersion }}"
            enableCoreDump: false
          proxyInit:
            image: "docker.io/istio/proxy_init:{{ configuration.istioOperator.istioVersion }}"
          defaultPodDisruptionBudget:
            enabled: true
          outboundTrafficPolicy:
            mode: ALLOW_ANY
          tracing:
            enabled: true
            tracer: datadog
            datadog:
                address: $(HOST_IP):8126
    tags:
      - istioOperator

  - name: Add default istio ingress gateway
    k8s:
      kubeconfig: "{{ configuration.k8sconfiguration.dest }}"
      state: present
      namespace: "{{ configuration.istioOperator.namespace }}"
      definition:
        apiVersion: networking.istio.io/v1alpha3
        kind: Gateway
        metadata:
          name: default-gateway
          labels:
            app: common
        spec:
          selector:
            istio: ingressgateway
          servers:
          - port:
              number: 80
              name: http
              protocol: HTTP
            hosts: "{{ configuration.istioOperator.gatewayHosts }}"
            tls:
              httpsRedirect: true
          - port:
              number: 443
              name: https
              protocol: HTTPS
            tls:
              mode: SIMPLE
              serverCertificate: /etc/istio/ingressgateway-certs/tls.crt
              privateKey: /etc/istio/ingressgateway-certs/tls.key
            hosts: "{{ configuration.istioOperator.gatewayHosts }}"
    tags:
      - istioOperator
    register: result
    retries: 5
    delay: 5
    until: result is succeeded

  - name: Delete istioOperator temp dir
    file:
      path: "{{ istioOperatorTempDir }}"
      state: absent
    changed_when: false
    tags:
      - istioOperator

  rescue:
  - name: Delete istioOperator temp dir
    file:
      path: "{{ istioOperatorTempDir }}"
      state: absent
    changed_when: false
    tags:
      - istioOperator

  - name: Fail
    fail:
      msg: "Rescue was invoked, failing task."
    tags:
      - istioOperator