- name: Create istio dir
  file:
    path: "{{ configuration.istio.dir }}"
    state: directory
    mode: 0755
  tags:
    - istio

- name: Download and extract istio
  unarchive:
    src: "https://github.com/istio/istio/releases/download/{{ configuration.istio.ver }}/istio-{{ configuration.istio.ver }}-linux.tar.gz"
    dest: "{{ configuration.istio.dir }}"
    remote_src: yes
  tags:
    - istio

- name: Copy {{ role_path }}/files/istio/helm-values-{{ configuration.istio.ver }}.yaml to {{ configuration.istio.dir }}/istio-{{ configuration.istio.ver }}/install/kubernetes/helm/istio/values.yaml
  copy:
    src: "{{ role_path }}/files/istio/helm-values-{{ configuration.istio.ver }}.yaml"
    dest: "{{ configuration.istio.dir }}/istio-{{ configuration.istio.ver }}/install/kubernetes/helm/istio/values.yaml"
  tags:
    - istio

- name: Set istioFile fact
  set_fact:
    istioFile: "{{ configuration.istio.dir }}/istio-helm-{{ configuration.istio.ver }}-{{ ansible_date_time.iso8601_basic_short }}.yaml"
  tags:
    - istio

- name: Verify that istioFile ({{ istioFile }}) doesn't exist
  file:
    state: absent
    path: "{{ istioFile }}"
  tags:
    - istio

- name: Create istio deployment file
  shell: "{{ helm.binDir }}/helm template \"{{ configuration.istio.dir }}/istio-{{ configuration.istio.ver }}/install/kubernetes/helm/istio\" --name istio --namespace {{ configuration.istio.namespace }} > {{ istioFile }}"
  tags:
    - istio

- name: Validate that istioFile ({{ istioFile }}) exists
  file:
    state: file
    path: "{{ istioFile }}"
  tags:
    - istio

- name: Add istio namespace
  k8s:
    kubeconfig: "{{ configuration.k8sconfiguration.dest }}"
    state: present
    definition:
      apiVersion: v1
      kind: Namespace
      metadata:
        name: "{{ configuration.istio.namespace }}"
        labels:
          istio-injection: disabled
          name: "{{ configuration.istio.namespace }}"
  when: configuration.istio.state == "present"
  tags:
    - istio

- name: Install Istio CRDs
  shell: kubectl --kubeconfig="{{ configuration.k8sconfiguration.dest }}" apply -f "{{ configuration.istio.dir }}/istio-{{ configuration.istio.ver }}/install/kubernetes/helm/istio/templates/crds.yaml"
  when: configuration.istio.state == "present"
  tags:
    - istio

- name: Pause for 5 seconds (istio present)
  pause:
    seconds: 5
  when: configuration.istio.state == "present"
  tags:
    - istio

- name: Install Istio
  shell: kubectl --kubeconfig="{{ configuration.k8sconfiguration.dest }}" apply -f "{{ istioFile }}"
  when: configuration.istio.state == "present"
  tags:
    - istio

- name: Uninstall Istio
  shell: kubectl --kubeconfig="{{ configuration.k8sconfiguration.dest }}" delete -f "{{ istioFile }}"
  when: configuration.istio.state == "absent"
  failed_when: false
  tags:
    - istio

- name: Pause for 5 seconds (istio absent)
  pause:
    seconds: 5
  when: configuration.istio.state == "absent"
  tags:
    - istio

- name: Remove Istio CRDs
  shell: kubectl --kubeconfig="{{ configuration.k8sconfiguration.dest }}" delete -f "{{ configuration.istio.dir }}/istio-{{ configuration.istio.ver }}/install/kubernetes/helm/istio/templates/crds.yaml" -n "{{ configuration.istio.namespace }}"
  when: configuration.istio.state == "absent"
  failed_when: false
  tags:
    - istio

- name: Remove istio namespace
  k8s:
    kubeconfig: "{{ configuration.k8sconfiguration.dest }}"
    state: absent
    definition:
      apiVersion: v1
      kind: Namespace
      metadata:
        name: "{{ configuration.istio.namespace }}"
  when: configuration.istio.state == "absent"
  tags:
    - istio

- name: Delete istio dir
  file:
    path: "{{ configuration.istio.dir }}"
    state: absent
  tags:
    - istio